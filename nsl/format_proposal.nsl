
version 0.1

// comment line

library noise
{
    version gl3 es3
    {
        float noise1d( in float x )
        {
            // with seed
            return nsl.math.perlin1d( 12345, width, height, x ) ;
        }
    }
}

library mylib
{
    float pi = 3.1432423 ;
    float c = 5648.3 ;
    float x = 324 ;
    vec3 some_vec = vec3(1.0) ;

    /*
        this
        is 
        a 
        longer 
        comment
    */
    library inner
    {
        version gl3 es3
        {
            vec3 xyz( vec3 )
            {
            }
        }
    }

    version gl3 es3
    {
        vec3 xyz( vec3 )
        {
        }
    }
}

config name
{
    render_states
    {
        
    }

    vertex_shader
    {
        mat4 proj : projection ;
        mat4 view : view ;

        float some_var ;

        tex2d some_texture ;

        in vec3 pos : position ;
        in vec2 tx : texcoord0 ;

        out vec4 pos : position ;

        void main()
        {
            // nsl shader
        }

        version gl3 es3
        {
            void main()
            {
                // build in function
                vec3 pos = nsl.math.xyz( in.pos ) ;

                // user library function
                pos = mylib.xyz( in.pos ) ;

                out.pos = proj * view * vec4( pos, 1.0 ) ;
            }
        }

        version hlsl9 hlsl10 hlsl11
        {}
    }

    pixel_shader
    {
        in vec3 frag_coord : frag_coord ;
        out vec4 color : color ;

        version gl3 es3
        {
            void main()
            {
                out.color = vec4(1) ;
            }
        }
    }
}
